#http://cyber.law.harvard.edu/rss/rss.html
#Required channel elements 

table channels

id integer primarykey

#Element	Description	Example
title string	The name of the channel. It's how people refer to your service. If you have an HTML website that contains the same information as your RSS file, the title of your channel should be the same as the title of your website.	GoUpstate.com News Headlines
link string	The URL to the HTML website corresponding to the channel.	http://www.goupstate.com/
description string       	Phrase or sentence describing the channel.



table items


id integer primarykey
channel_id integer = Foreignkey channels.id

#Element	Description	Example
title string	The title of the item.	Venice Film Festival Tries to Quit Sinking
link string	The URL of the item.	http://nytimes.com/2004/12/07FEST.html
description string    	The item synopsis.	Some of the most heated chatter at the Venice Film Festival this week was about the way that the arrival of the stars at the Palazzo del Cinema was being staged.
author string	Email address of the author of the item. More.	oprah\@oxygen.net
category string	Includes the item in one or more categories. More.	 
comments string	URL of a page for comments relating to the item. More.	http://www.myblog.org/cgi-local/mt/mt-comments.cgi?entry_id=290
enclosure string	Describes a media object that is attached to the item. More.	
guid string	A string that uniquely identifies the item. More.	http://inessential.com/2002/09/01.php#a2
pubDate strin g	Indicates when the item was published. More.	Sun, 19 May 2002 15:21:36 GMT
source string	The RSS channel that the item came from. More.	 















# table_def.py
import sqlalchemy as sa
from sqlalchemy.ext.declarative import declarative_base

engine = sa.create_engine('sqlite:///podcasts.db', echo=True)
Base = declarative_base()

########################################################################
class Channel(Base):
	""""""
	__tablename__ = "channels"
	
	id = sa.Column(sa.Integer, primary_key=True)
	title = sa.Column(sa.String, nullable=False)
	link = sa.Column(sa.String, nullable=False)
	description = sa.Column(sa.String, nullable=False)
	
	#----------------------------------------------------------------------
	def __init__(self, title, link, description):
		""""""
		self.title = title
		self.link = link
		self.description = description
		
########################################################################
class Item(Base):
	""""""
	__tablename__ = "items"
	
	id = sa.Column(sa.Integer, primary_key=True)
	title = sa.Column(sa.String, nullable=False)
	link = sa.Column(sa.String, nullable=False)
	description = sa.Column(sa.String, nullable=False)
	author = sa.Column(sa.String, nullable=False)
	category = sa.Column(sa.String, nullable=False)
	comments = sa.Column(sa.String, nullable=False)
	enclosure = sa.Column(sa.String, nullable=False)
	guid = sa.Column(sa.String, nullable=False)
	pubDate = sa.Column(sa.String, nullable=False)
	source = sa.Column(sa.String, nullable=False)
	
	channel_id = sa.Column(sa.Integer, sa.ForeignKey("channels.id"))
	channel = sa.orm.relationship("Channel", backref=sa.orm.backref("items", order_by=id))
	
	#----------------------------------------------------------------------
	def __init__(self, title, link, description, author, category, comments, enclosure, guid, pubDate, source):
		""""""
		self.title = title
		self.link = link
		self.description = description
		self.author = author
		self.category = category
		self.comments = comments
		self.enclosure = enclosure
		self.guid = guid
		self.pubDate = pubDate
		self.source = source
		
# create tables
Base.metadata.create_all(engine)
