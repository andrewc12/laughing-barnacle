#http://cyber.law.harvard.edu/rss/rss.html
#Required channel elements 

table channel

id primarykey

#Element	Description	Example
title	The name of the channel. It's how people refer to your service. If you have an HTML website that contains the same information as your RSS file, the title of your channel should be the same as the title of your website.	GoUpstate.com News Headlines
link	The URL to the HTML website corresponding to the channel.	http://www.goupstate.com/
description       	Phrase or sentence describing the channel.



table item


id primarykey
channel_id = Foreignkey table.id

#Element	Description	Example
title	The title of the item.	Venice Film Festival Tries to Quit Sinking
link	The URL of the item.	http://nytimes.com/2004/12/07FEST.html
description     	The item synopsis.	Some of the most heated chatter at the Venice Film Festival this week was about the way that the arrival of the stars at the Palazzo del Cinema was being staged.
author	Email address of the author of the item. More.	oprah\@oxygen.net
category	Includes the item in one or more categories. More.	 
comments	URL of a page for comments relating to the item. More.	http://www.myblog.org/cgi-local/mt/mt-comments.cgi?entry_id=290
enclosure	Describes a media object that is attached to the item. More.	
guid	A string that uniquely identifies the item. More.	http://inessential.com/2002/09/01.php#a2
pubDate	Indicates when the item was published. More.	Sun, 19 May 2002 15:21:36 GMT
source	The RSS channel that the item came from. More.	 















# table_def.py
from sqlalchemy import create_engine, ForeignKey
from sqlalchemy import Column, Date, Integer, String
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import relationship, backref

engine = sqlalchemy.create_engine('sqlite:///mymusic.db', echo=True)
Base = sqlalchemy.ext.declarative.declarative_base()

########################################################################
class Artist(Base):
	""""""
	__tablename__ = "artists"
	
	id = sqlalchemy.Column(sqlalchemy.Integer, primary_key=True)
	name = sqlalchemy.Column(sqlalchemy.String)  
	
	#----------------------------------------------------------------------
	def __init__(self, name):
		""""""
		self.name = name    
		
########################################################################
class Album(Base):
	""""""
	__tablename__ = "albums"
	
	id = sqlalchemy.Column(sqlalchemy.Integer, primary_key=True)
	title = sqlalchemy.Column(sqlalchemy.String)
	release_date = sqlalchemy.Column(sqlalchemy.Date)
	publisher = sqlalchemy.Column(sqlalchemy.String)
	media_type = sqlalchemy.Column(sqlalchemy.String)
	
	artist_id = sqlalchemy.Column(sqlalchemy.Integer, sqlalchemy.ForeignKey("artists.id"))
	artist = sqlalchemy.orm.relationship("Artist", sqlalchemy.orm.backref=backref("albums", order_by=id))
	
	#----------------------------------------------------------------------
	def __init__(self, title, release_date, publisher, media_type):
		""""""
		self.title = title
		self.release_date = release_date
		self.publisher = publisher
		self.media_type = media_type
		
# create tables
Base.metadata.create_all(engine)
